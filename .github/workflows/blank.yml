# .github/workflows/build-hikari.yml
name: Build Hikari-LLVM15 Toolchain

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Install dependencies
        run: |
          brew update
          brew install cmake ninja python3 llvm@15 swig

      - name: Configure and build
        run: |
          # 直接进入仓库根
          cd "${{ github.workspace }}"

          # 干净重建 build 目录
          rm -rf build
          mkdir build && cd build

          # 配置：只编 clang+lld，跳过内部 TableGen/Python、用外部 llvm-tblgen
          cmake -G Ninja ../llvm \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX="${{ runner.temp }}/Hikari-LLVM15.0.2.xctoolchain" \
            -DLLVM_CREATE_XCODE_TOOLCHAIN=ON \
            -DCMAKE_OSX_SYSROOT="$(xcrun --sdk iphoneos --show-sdk-path)" \
            -DCMAKE_OSX_ARCHITECTURES=arm64 \
            -DLLVM_ENABLE_PROJECTS="clang;lld" \
            -DLLVM_ENABLE_ZSTD=OFF \
            -DCMAKE_SYSTEM_IGNORE_PATH="/opt/homebrew" \
            -DLLVM_BUILD_LLVM_TABLEGEN=OFF \
            -DLLVM_BUILD_CLANG_TABLEGEN=OFF \
            -DLLVM_EXTERNAL_TABLEGEN=/opt/homebrew/opt/llvm@15/bin/llvm-tblgen \
            -DLLDB_DISABLE_PYTHON=ON

          # 并行编译 & 安装 Toolchain
          ninja -j2
          ninja install-xcode-toolchain

      - name: Package toolchain
        run: |
          cd "${{ runner.temp }}"
          zip -r Hikari-LLVM15.0.2.xctoolchain.zip Hikari-LLVM15.0.2.xctoolchain

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Hikari-LLVM15.0.2.xctoolchain
          path: ${{ runner.temp }}/Hikari-LLVM15.0.2.xctoolchain.zip
